#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apisix:
  ssl:
    enable: true
    listen: # APISIX listening port for HTTPS traffic.
      - port: 9443
        enable_http2: true
          # - ip: 127.0.0.3                           # If not set, default to `0.0.0.0`.
          #   port: 9445
          #   enable_http2: true
        # ssl_trusted_certificate: /path/to/ca-cert   # Set the path to CA certificates used to verify client
        # certificates in the PEM format.
    ssl_protocols: TLSv1.2 TLSv1.3                # TLS versions supported.
    ssl_ciphers: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl_session_tickets: false  # If true, session tickets are used for SSL/TLS connections.

    key_encrypt_salt: # This field is only used to encrypt the private key of SSL.
      - edd1c9f0985e76a2        # Set the encryption key for AES-128-CBC. It should be a
        # hexadecimal string of length 16.
        # If not set, APISIX saves the original data into etcd.
        # CAUTION: If you would like to update the key, add the new key as the
        # first item in the array and keep the older keys below the newly added
        # key, so that data can be decrypted with the older keys and encrypted
      # with the new key. Removing the old keys directly can render the data
      # unrecoverable.

    # fallback_sni: "my.default.domain"      # Fallback SNI to be used if the client does not send SNI during


  node_listen: 9080              # APISIX listening port
  enable_ipv6: false

  enable_control: true
  control:
    ip: "0.0.0.0"
    port: 9092

deployment:
  admin:
    allow_admin:               # https://nginx.org/en/docs/http/ngx_http_access_module.html#allow
      - 0.0.0.0/0              # We need to restrict ip access rules for security. 0.0.0.0/0 is for test.

    admin_key:
      - name: "admin"
        key: edd1c9f034335f136f87ad84b625c8f1
        role: admin                 # admin: manage all configuration data

      - name: "viewer"
        key: 4054f7cf07e344346cd3f287985e76a2
        role: viewer

  etcd:
    host:                           # it's possible to define multiple etcd hosts addresses of the same etcd cluster.
      - "http://etcd:2379"          # multiple etcd address
    prefix: "/apisix"               # apisix configurations prefix
    timeout: 30                     # 30 seconds


plugin_attr:
  redirect:
    https_port: 443