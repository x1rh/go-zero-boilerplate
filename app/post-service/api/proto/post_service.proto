syntax = "proto3";

package post_service;
option go_package="./api/pb";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/wrappers.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "zero backend";
  };
  schemes: HTTP;

  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
    security: {
      key: "BasicAuth";
      value: {type: TYPE_BASIC}
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
  security: {
    security_requirement: {
      key: "BasicAuth";
      value: {};
    }
    security_requirement: {
      key: "bearer"
      value: {};
    }
  }
};


service PostService {
  rpc PostCreate(PostCreateReq) returns(PostCreateResp) {
    option (google.api.http) = {
      post: "/post"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "create a post"
    };
  }

  rpc PostQuery(PostIdReq) returns(PostQueryResp) {
    option (google.api.http) = {
      get: "/post/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "retrieve post" 
    };
  }

  rpc PostUpdate(PostUpdateReq) returns(CodeMessage) {
    option (google.api.http) = {
      put: "/post/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "update a post" 
    };
  }
    
  rpc PostDelete(PostIdReq) returns(CodeMessage) {
    option (google.api.http) = {
      delete: "/post/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "delete post" 
    };
  }
}


service health {
  rpc Ping(Request) returns(Response) {
    option (google.api.http) = {
      get: "/ping/{ping}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "ping"
      security: {
        security_requirement: {
          key: "Anonymous";
          value: {}
        }
      }
    };
  }
}

message Request {
  string ping = 1;
}

message Response {
  string pong = 1 [(validate.rules).string = {}];
}

message ErrorMessage {
  string message = 1;
}

message Message {
  string message = 1;
}

message MessageResponse {
  string message = 1;
}

message CodeMessage {
  int32 code = 1;
  string message = 2;
}

message PostCreateReq {

}

message PostCreateResp {

}

message PostIdReq {
  int64 id = 1;
}

message PostUpdateReq {
  int64 id = 1;
}

message PostQueryResp {

}


