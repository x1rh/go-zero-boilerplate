{
  "swagger": "2.0",
  "info": {
    "title": "zero backend",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "health"
    },
    {
      "name": "identity"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "login by telegram",
        "operationId": "identity_login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zero_serviceLoginResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "identity"
        ],
        "security": [
          {
            "Anonymous": []
          }
        ]
      }
    },
    "/auth/login/nonce": {
      "get": {
        "summary": "get wallet login nonce",
        "operationId": "identity_walletLoginNonce",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zero_serviceWalletLoginNonceResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "identity"
        ],
        "security": [
          {
            "Anonymous": []
          }
        ]
      }
    },
    "/auth/loginByWallet": {
      "post": {
        "summary": "login by wallet",
        "operationId": "identity_loginByWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zero_serviceLoginByWalletResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "identity"
        ],
        "security": [
          {
            "Anonymous": []
          }
        ]
      }
    },
    "/ping/{ping}": {
      "get": {
        "summary": "ping",
        "operationId": "health_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zero_serviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ping",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "health"
        ],
        "security": [
          {
            "Anonymous": []
          }
        ]
      }
    },
    "/user/{uid}": {
      "get": {
        "summary": "userinfo",
        "operationId": "identity_userinfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/zero_serviceUserinfoResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "avatar",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mobile",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "identity"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "zero_serviceLoginByWalletResp": {
      "type": "object"
    },
    "zero_serviceLoginResp": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "zero_serviceResponse": {
      "type": "object",
      "properties": {
        "pong": {
          "type": "string"
        }
      }
    },
    "zero_serviceUserInfo": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "format": "uint64"
        },
        "username": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "zero_serviceUserinfoResp": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/zero_serviceUserInfo"
        }
      }
    },
    "zero_serviceWalletLoginNonceResp": {
      "type": "object"
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    },
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    },
    {
      "BasicAuth": [],
      "bearer": []
    }
  ]
}
